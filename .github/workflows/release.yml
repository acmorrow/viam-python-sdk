name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The type of version bump. Select "-s" for no automatic version change. See https://python-poetry.org/docs/cli/#version'
        type: choice
        required: true
        default: '-s'
        options:
        - major
        - minor
        - patch
        - premajor
        - preminor
        - prepatch
        - prerelease
        - prerelease
        - prerelease
        - '-s'

jobs:
  prepare:
    # if: github.repository_owner == 'viamrobotics' && github.ref == 'refs/heads/main'
    # runs-on: [self-hosted, x64]
    # container:
    #   image: ghcr.io/viamrobotics/canon:amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        # with:
        #   token: ${{ secrets.REPO_READ_TOKEN }}

      # TODO: REMOVE
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Clean Format Test
        run: make clean better_imports format test

      - name: Bump Version
        id: bump_version
        run: |
          poetry version ${{ inputs.version }}
          echo "SDK_VERSION=$(poetry version -s)" >> $GITHUB_ENV

      - name: Commit + Push
        uses: EndBug/add-and-commit@v9.0.0
        with:
          default_author: github_actions
          message: Bumping prerelease version to v${{ env.SDK_VERSION }} [skip ci]

  build:
    needs: prepare
    # if: github.repository_owner == 'viamrobotics' && github.ref == 'refs/heads/main'
    # runs-on: [self-hosted, x64]
    # container:
    #   image: ghcr.io/viamrobotics/canon:amd64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: macosx_x86_64
            ext: dylib
            min: '_11_0_'
          - arch: macosx_arm64
            ext: dylib
            min: '_11_0_'
          - arch: linux_aarch64
            ext: so
            min: ''
          - arch: linux_x86_64
            ext: so
            min: ''
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        # with:
        #   token: ${{ secrets.REPO_READ_TOKEN }}

      # TODO: REMOVE
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Download
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'viamrobotics/viam-rust-sdk'
          file: 'libviam-${{ matrix.arch }}.${{ matrix.ext }}'
          target: 'src/viam/rpc/libviam.${{ matrix.ext }}'

      - name: Build
        run: poetry build

      - name: Rename
        run: mv dist/viam-$(poetry run python -c "import viam; print(viam.__version__)")-py3-none-any.whl dist/viam-$(poetry run python -c "import viam; print(viam.__version__)")-py3-none-${{ matrix.arch }}${{ matrix.min }}.whl

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
