:py:mod:`viam.proto.service.shell`
==================================

.. py:module:: viam.proto.service.shell

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.service.shell.ShellServiceBase
   viam.proto.service.shell.ShellServiceStub
   viam.proto.service.shell.ShellRequest
   viam.proto.service.shell.ShellResponse




.. py:class:: ShellServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Shell(stream: grpclib.server.Stream[service.shell.v1.shell_pb2.ShellRequest, service.shell.v1.shell_pb2.ShellResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: ShellServiceStub(channel: grpclib.client.Channel)


.. py:class:: ShellRequest(*, name: str = ..., data_in: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: data_in
      :annotation: :str

      


.. py:class:: ShellResponse(*, data_out: str = ..., data_err: str = ..., eof: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: data_out
      :annotation: :str

      

   .. py:attribute:: data_err
      :annotation: :str

      

   .. py:attribute:: eof
      :annotation: :bool

      


