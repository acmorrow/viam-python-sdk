:py:mod:`viam.proto.service.datamanager`
========================================

.. py:module:: viam.proto.service.datamanager

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.service.datamanager.DataManagerServiceBase
   viam.proto.service.datamanager.DataManagerServiceStub
   viam.proto.service.datamanager.SyncRequest
   viam.proto.service.datamanager.SyncResponse




.. py:class:: DataManagerServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Sync(stream: grpclib.server.Stream[service.datamanager.v1.data_manager_pb2.SyncRequest, service.datamanager.v1.data_manager_pb2.SyncResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: DataManagerServiceStub(channel: grpclib.client.Channel)


.. py:class:: SyncRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      


.. py:class:: SyncResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


