:py:mod:`viam.proto.component.gripper`
======================================

.. py:module:: viam.proto.component.gripper

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.component.gripper.GripperServiceBase
   viam.proto.component.gripper.GripperServiceStub
   viam.proto.component.gripper.GrabRequest
   viam.proto.component.gripper.GrabResponse
   viam.proto.component.gripper.OpenRequest
   viam.proto.component.gripper.OpenResponse
   viam.proto.component.gripper.StopRequest
   viam.proto.component.gripper.StopResponse




.. py:class:: GripperServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Open(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.OpenRequest, component.gripper.v1.gripper_pb2.OpenResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Grab(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.GrabRequest, component.gripper.v1.gripper_pb2.GrabResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Stop(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.StopRequest, component.gripper.v1.gripper_pb2.StopResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: GripperServiceStub(channel: grpclib.client.Channel)


.. py:class:: GrabRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      


.. py:class:: GrabResponse(*, success: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: success
      :annotation: :bool

      


.. py:class:: OpenRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      


.. py:class:: OpenResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: StopRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a gripper


.. py:class:: StopResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


