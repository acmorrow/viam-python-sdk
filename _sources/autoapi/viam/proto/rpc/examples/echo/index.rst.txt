:py:mod:`viam.proto.rpc.examples.echo`
======================================

.. py:module:: viam.proto.rpc.examples.echo

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.rpc.examples.echo.EchoServiceBase
   viam.proto.rpc.examples.echo.EchoServiceStub
   viam.proto.rpc.examples.echo.EchoBiDiRequest
   viam.proto.rpc.examples.echo.EchoBiDiResponse
   viam.proto.rpc.examples.echo.EchoMultipleRequest
   viam.proto.rpc.examples.echo.EchoMultipleResponse
   viam.proto.rpc.examples.echo.EchoRequest
   viam.proto.rpc.examples.echo.EchoResponse




.. py:class:: EchoServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Echo(self, stream: grpclib.server.Stream[proto.rpc.examples.echo.v1.echo_pb2.EchoRequest, proto.rpc.examples.echo.v1.echo_pb2.EchoResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoMultiple(self, stream: grpclib.server.Stream[proto.rpc.examples.echo.v1.echo_pb2.EchoMultipleRequest, proto.rpc.examples.echo.v1.echo_pb2.EchoMultipleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoBiDi(self, stream: grpclib.server.Stream[proto.rpc.examples.echo.v1.echo_pb2.EchoBiDiRequest, proto.rpc.examples.echo.v1.echo_pb2.EchoBiDiResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__(self) -> Dict[str, grpclib.const.Handler]



.. py:class:: EchoServiceStub(channel: grpclib.client.Channel)


.. py:class:: EchoBiDiRequest(*, message: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :Text

      


.. py:class:: EchoBiDiResponse(*, message: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :Text

      


.. py:class:: EchoMultipleRequest(*, message: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :Text

      


.. py:class:: EchoMultipleResponse(*, message: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :Text

      


.. py:class:: EchoRequest(*, message: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :Text

      


.. py:class:: EchoResponse(*, message: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :Text

      


