:py:mod:`viam.proto.rpc.examples.echoresource`
==============================================

.. py:module:: viam.proto.rpc.examples.echoresource

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.rpc.examples.echoresource.EchoResourceServiceBase
   viam.proto.rpc.examples.echoresource.EchoResourceServiceStub
   viam.proto.rpc.examples.echoresource.EchoResourceBiDiRequest
   viam.proto.rpc.examples.echoresource.EchoResourceBiDiResponse
   viam.proto.rpc.examples.echoresource.EchoResourceMultipleRequest
   viam.proto.rpc.examples.echoresource.EchoResourceMultipleResponse
   viam.proto.rpc.examples.echoresource.EchoResourceRequest
   viam.proto.rpc.examples.echoresource.EchoResourceResponse




.. py:class:: EchoResourceServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: EchoResource(stream: grpclib.server.Stream[proto.rpc.examples.echoresource.v1.echoresource_pb2.EchoResourceRequest, proto.rpc.examples.echoresource.v1.echoresource_pb2.EchoResourceResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoResourceMultiple(stream: grpclib.server.Stream[proto.rpc.examples.echoresource.v1.echoresource_pb2.EchoResourceMultipleRequest, proto.rpc.examples.echoresource.v1.echoresource_pb2.EchoResourceMultipleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoResourceBiDi(stream: grpclib.server.Stream[proto.rpc.examples.echoresource.v1.echoresource_pb2.EchoResourceBiDiRequest, proto.rpc.examples.echoresource.v1.echoresource_pb2.EchoResourceBiDiResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: EchoResourceServiceStub(channel: grpclib.client.Channel)


.. py:class:: EchoResourceBiDiRequest(*, name: str = ..., message: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: message
      :annotation: :str

      


.. py:class:: EchoResourceBiDiResponse(*, message: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :str

      


.. py:class:: EchoResourceMultipleRequest(*, name: str = ..., message: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: message
      :annotation: :str

      


.. py:class:: EchoResourceMultipleResponse(*, message: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :str

      


.. py:class:: EchoResourceRequest(*, name: str = ..., message: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: message
      :annotation: :str

      


.. py:class:: EchoResourceResponse(*, message: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :annotation: :str

      


