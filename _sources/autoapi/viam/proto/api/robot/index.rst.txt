:py:mod:`viam.proto.api.robot`
==============================

.. py:module:: viam.proto.api.robot

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.api.robot.RobotServiceBase
   viam.proto.api.robot.RobotServiceStub
   viam.proto.api.robot.BlockForOperationRequest
   viam.proto.api.robot.BlockForOperationResponse
   viam.proto.api.robot.CancelOperationRequest
   viam.proto.api.robot.CancelOperationResponse
   viam.proto.api.robot.DiscoverComponentsRequest
   viam.proto.api.robot.DiscoverComponentsResponse
   viam.proto.api.robot.Discovery
   viam.proto.api.robot.DiscoveryQuery
   viam.proto.api.robot.FrameSystemConfig
   viam.proto.api.robot.FrameSystemConfigRequest
   viam.proto.api.robot.FrameSystemConfigResponse
   viam.proto.api.robot.GetOperationsRequest
   viam.proto.api.robot.GetOperationsResponse
   viam.proto.api.robot.GetStatusRequest
   viam.proto.api.robot.GetStatusResponse
   viam.proto.api.robot.Operation
   viam.proto.api.robot.ResourceNamesRequest
   viam.proto.api.robot.ResourceNamesResponse
   viam.proto.api.robot.ResourceRPCSubtype
   viam.proto.api.robot.ResourceRPCSubtypesRequest
   viam.proto.api.robot.ResourceRPCSubtypesResponse
   viam.proto.api.robot.Status
   viam.proto.api.robot.StopAllRequest
   viam.proto.api.robot.StopAllResponse
   viam.proto.api.robot.StopExtraParameters
   viam.proto.api.robot.StreamStatusRequest
   viam.proto.api.robot.StreamStatusResponse
   viam.proto.api.robot.TransformPoseRequest
   viam.proto.api.robot.TransformPoseResponse




.. py:class:: RobotServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: GetOperations(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.GetOperationsRequest, proto.api.robot.v1.robot_pb2.GetOperationsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ResourceNames(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.ResourceNamesRequest, proto.api.robot.v1.robot_pb2.ResourceNamesResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ResourceRPCSubtypes(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.ResourceRPCSubtypesRequest, proto.api.robot.v1.robot_pb2.ResourceRPCSubtypesResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CancelOperation(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.CancelOperationRequest, proto.api.robot.v1.robot_pb2.CancelOperationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: BlockForOperation(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.BlockForOperationRequest, proto.api.robot.v1.robot_pb2.BlockForOperationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DiscoverComponents(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.DiscoverComponentsRequest, proto.api.robot.v1.robot_pb2.DiscoverComponentsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: FrameSystemConfig(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.FrameSystemConfigRequest, proto.api.robot.v1.robot_pb2.FrameSystemConfigResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: TransformPose(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.TransformPoseRequest, proto.api.robot.v1.robot_pb2.TransformPoseResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetStatus(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.GetStatusRequest, proto.api.robot.v1.robot_pb2.GetStatusResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: StreamStatus(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.StreamStatusRequest, proto.api.robot.v1.robot_pb2.StreamStatusResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: StopAll(self, stream: grpclib.server.Stream[proto.api.robot.v1.robot_pb2.StopAllRequest, proto.api.robot.v1.robot_pb2.StopAllResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__(self) -> Dict[str, grpclib.const.Handler]



.. py:class:: RobotServiceStub(channel: grpclib.client.Channel)


.. py:class:: BlockForOperationRequest(*, id: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :Text

      


.. py:class:: BlockForOperationResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: CancelOperationRequest(*, id: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :Text

      


.. py:class:: CancelOperationResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DiscoverComponentsRequest(*, queries: Optional[Iterable[global___DiscoveryQuery]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: queries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DiscoveryQuery]
      :property:



.. py:class:: DiscoverComponentsResponse(*, discovery: Optional[Iterable[global___Discovery]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: discovery(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Discovery]
      :property:



.. py:class:: Discovery(*, query: Optional[global___DiscoveryQuery] = ..., results: Optional[google.protobuf.struct_pb2.Struct] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: query(self) -> global___DiscoveryQuery
      :property:


   .. py:method:: results(self) -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[query, b'query', results, b'results']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DiscoveryQuery(*, subtype: Text = ..., model: Text = ...)



   Discovery



   .. py:attribute:: subtype
      :annotation: :Text

      

   .. py:attribute:: model
      :annotation: :Text

      


.. py:class:: FrameSystemConfig(*, name: Text = ..., pose_in_parent_frame: Optional[viam.gen.proto.api.common.v1.common_pb2.PoseInFrame] = ..., model_json: bytes = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :Text

      

   .. py:attribute:: model_json
      :annotation: :bytes

      

   .. py:method:: pose_in_parent_frame(self) -> viam.gen.proto.api.common.v1.common_pb2.PoseInFrame
      :property:


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[pose_in_parent_frame, b'pose_in_parent_frame']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: FrameSystemConfigRequest(*, supplemental_transforms: Optional[Iterable[viam.gen.proto.api.common.v1.common_pb2.Transform]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: supplemental_transforms(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.proto.api.common.v1.common_pb2.Transform]
      :property:

      pose information on any additional reference frames that are needed
      to supplement the robot's frame system



.. py:class:: FrameSystemConfigResponse(*, frame_system_configs: Optional[Iterable[global___FrameSystemConfig]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: frame_system_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FrameSystemConfig]
      :property:



.. py:class:: GetOperationsRequest



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: GetOperationsResponse(*, operations: Optional[Iterable[global___Operation]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation]
      :property:



.. py:class:: GetStatusRequest(*, resource_names: Optional[Iterable[viam.gen.proto.api.common.v1.common_pb2.ResourceName]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: resource_names(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.proto.api.common.v1.common_pb2.ResourceName]
      :property:



.. py:class:: GetStatusResponse(*, status: Optional[Iterable[global___Status]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Status]
      :property:



.. py:class:: Operation(*, id: Text = ..., method: Text = ..., arguments: Optional[google.protobuf.struct_pb2.Struct] = ..., started: Optional[google.protobuf.timestamp_pb2.Timestamp] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :Text

      

   .. py:attribute:: method
      :annotation: :Text

      

   .. py:method:: arguments(self) -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: started(self) -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[arguments, b'arguments', started, b'started']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ResourceNamesRequest



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: ResourceNamesResponse(*, resources: Optional[Iterable[viam.gen.proto.api.common.v1.common_pb2.ResourceName]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.proto.api.common.v1.common_pb2.ResourceName]
      :property:



.. py:class:: ResourceRPCSubtype(*, subtype: Optional[viam.gen.proto.api.common.v1.common_pb2.ResourceName] = ..., proto_service: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: proto_service
      :annotation: :Text

      

   .. py:method:: subtype(self) -> viam.gen.proto.api.common.v1.common_pb2.ResourceName
      :property:


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[subtype, b'subtype']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ResourceRPCSubtypesRequest



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: ResourceRPCSubtypesResponse(*, resource_rpc_subtypes: Optional[Iterable[global___ResourceRPCSubtype]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: resource_rpc_subtypes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceRPCSubtype]
      :property:



.. py:class:: Status(*, name: Optional[viam.gen.proto.api.common.v1.common_pb2.ResourceName] = ..., status: Optional[google.protobuf.struct_pb2.Struct] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: name(self) -> viam.gen.proto.api.common.v1.common_pb2.ResourceName
      :property:


   .. py:method:: status(self) -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[name, b'name', status, b'status']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: StopAllRequest(*, extra: Optional[Iterable[global___StopExtraParameters]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: extra(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StopExtraParameters]
      :property:



.. py:class:: StopAllResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: StopExtraParameters(*, name: Optional[viam.gen.proto.api.common.v1.common_pb2.ResourceName] = ..., params: Optional[google.protobuf.struct_pb2.Struct] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: name(self) -> viam.gen.proto.api.common.v1.common_pb2.ResourceName
      :property:


   .. py:method:: params(self) -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[name, b'name', params, b'params']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: StreamStatusRequest(*, resource_names: Optional[Iterable[viam.gen.proto.api.common.v1.common_pb2.ResourceName]] = ..., every: Optional[google.protobuf.duration_pb2.Duration] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: resource_names(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.proto.api.common.v1.common_pb2.ResourceName]
      :property:


   .. py:method:: every(self) -> google.protobuf.duration_pb2.Duration
      :property:

      how often to send a new status.


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[every, b'every']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: StreamStatusResponse(*, status: Optional[Iterable[global___Status]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Status]
      :property:



.. py:class:: TransformPoseRequest(*, source: Optional[viam.gen.proto.api.common.v1.common_pb2.PoseInFrame] = ..., destination: Text = ..., supplemental_transforms: Optional[Iterable[viam.gen.proto.api.common.v1.common_pb2.Transform]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: destination
      :annotation: :Text

      the reference frame into which the source pose should be transformed,
      if unset this defaults to the "world" reference frame

   .. py:method:: source(self) -> viam.gen.proto.api.common.v1.common_pb2.PoseInFrame
      :property:

      the original pose to transform along with the reference frame in
      which it was observed


   .. py:method:: supplemental_transforms(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.proto.api.common.v1.common_pb2.Transform]
      :property:

      pose information on any additional reference frames that are needed
      to perform the transform


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[source, b'source']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: TransformPoseResponse(*, pose: Optional[viam.gen.proto.api.common.v1.common_pb2.PoseInFrame] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: pose(self) -> viam.gen.proto.api.common.v1.common_pb2.PoseInFrame
      :property:


   .. py:method:: HasField(self, field_name: typing_extensions.Literal[pose, b'pose']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



