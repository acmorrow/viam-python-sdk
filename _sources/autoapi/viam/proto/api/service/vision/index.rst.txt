:py:mod:`viam.proto.api.service.vision`
=======================================

.. py:module:: viam.proto.api.service.vision

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.api.service.vision.VisionServiceBase
   viam.proto.api.service.vision.VisionServiceStub
   viam.proto.api.service.vision.AddDetectorRequest
   viam.proto.api.service.vision.AddDetectorResponse
   viam.proto.api.service.vision.Detection
   viam.proto.api.service.vision.GetDetectionsFromCameraRequest
   viam.proto.api.service.vision.GetDetectionsFromCameraResponse
   viam.proto.api.service.vision.GetDetectionsRequest
   viam.proto.api.service.vision.GetDetectionsResponse
   viam.proto.api.service.vision.GetDetectorNamesRequest
   viam.proto.api.service.vision.GetDetectorNamesResponse
   viam.proto.api.service.vision.GetObjectPointCloudsRequest
   viam.proto.api.service.vision.GetObjectPointCloudsResponse
   viam.proto.api.service.vision.GetSegmenterNamesRequest
   viam.proto.api.service.vision.GetSegmenterNamesResponse
   viam.proto.api.service.vision.GetSegmenterParametersRequest
   viam.proto.api.service.vision.GetSegmenterParametersResponse
   viam.proto.api.service.vision.TypedParameter




.. py:class:: VisionServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: GetDetectorNames(stream: grpclib.server.Stream[proto.api.service.vision.v1.vision_pb2.GetDetectorNamesRequest, proto.api.service.vision.v1.vision_pb2.GetDetectorNamesResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: AddDetector(stream: grpclib.server.Stream[proto.api.service.vision.v1.vision_pb2.AddDetectorRequest, proto.api.service.vision.v1.vision_pb2.AddDetectorResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetDetectionsFromCamera(stream: grpclib.server.Stream[proto.api.service.vision.v1.vision_pb2.GetDetectionsFromCameraRequest, proto.api.service.vision.v1.vision_pb2.GetDetectionsFromCameraResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetDetections(stream: grpclib.server.Stream[proto.api.service.vision.v1.vision_pb2.GetDetectionsRequest, proto.api.service.vision.v1.vision_pb2.GetDetectionsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetSegmenterNames(stream: grpclib.server.Stream[proto.api.service.vision.v1.vision_pb2.GetSegmenterNamesRequest, proto.api.service.vision.v1.vision_pb2.GetSegmenterNamesResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetSegmenterParameters(stream: grpclib.server.Stream[proto.api.service.vision.v1.vision_pb2.GetSegmenterParametersRequest, proto.api.service.vision.v1.vision_pb2.GetSegmenterParametersResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetObjectPointClouds(stream: grpclib.server.Stream[proto.api.service.vision.v1.vision_pb2.GetObjectPointCloudsRequest, proto.api.service.vision.v1.vision_pb2.GetObjectPointCloudsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: VisionServiceStub(channel: grpclib.client.Channel)


.. py:class:: AddDetectorRequest(*, name: str = ..., detector_name: str = ..., detector_model_type: str = ..., detector_parameters: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: detector_name
      :annotation: :str

      

   .. py:attribute:: detector_model_type
      :annotation: :str

      

   .. py:method:: detector_parameters() -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: HasField(field_name: Literal[detector_parameters, b'detector_parameters']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: AddDetectorResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: Detection(*, x_min: builtins.int | None = ..., y_min: builtins.int | None = ..., x_max: builtins.int | None = ..., y_max: builtins.int | None = ..., confidence: float = ..., class_name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: x_min
      :annotation: :int

      the four corners of the box

   .. py:attribute:: y_min
      :annotation: :int

      

   .. py:attribute:: x_max
      :annotation: :int

      

   .. py:attribute:: y_max
      :annotation: :int

      

   .. py:attribute:: confidence
      :annotation: :float

      the confidence of the detection

   .. py:attribute:: class_name
      :annotation: :str

      label associated with the detected object

   .. py:method:: HasField(field_name: Literal[_x_max, b'_x_max', _x_min, b'_x_min', _y_max, b'_y_max', _y_min, b'_y_min', x_max, b'x_max', x_min, b'x_min', y_max, b'y_max', y_min, b'y_min']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_x_max, b'_x_max']) -> typing_extensions.Literal['x_max'] | None
               WhichOneof(oneof_group: Literal[_x_min, b'_x_min']) -> typing_extensions.Literal['x_min'] | None
               WhichOneof(oneof_group: Literal[_y_max, b'_y_max']) -> typing_extensions.Literal['y_max'] | None
               WhichOneof(oneof_group: Literal[_y_min, b'_y_min']) -> typing_extensions.Literal['y_min'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: GetDetectionsFromCameraRequest(*, name: str = ..., camera_name: str = ..., detector_name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: camera_name
      :annotation: :str

      name of camera source to use as input

   .. py:attribute:: detector_name
      :annotation: :str

      name of the registered detector to use


.. py:class:: GetDetectionsFromCameraResponse(*, detections: collections.abc.Iterable[global___Detection] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: detections() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Detection]
      :property:

      the bounding boxes and labels



.. py:class:: GetDetectionsRequest(*, name: str = ..., image: bytes = ..., width: int = ..., height: int = ..., mime_type: str = ..., detector_name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      name of the vision service

   .. py:attribute:: image
      :annotation: :bytes

      the image, encoded as bytes

   .. py:attribute:: width
      :annotation: :int

      the width of the image

   .. py:attribute:: height
      :annotation: :int

      the height of the image

   .. py:attribute:: mime_type
      :annotation: :str

      the actual MIME type of image

   .. py:attribute:: detector_name
      :annotation: :str

      name of the registered detector to use


.. py:class:: GetDetectionsResponse(*, detections: collections.abc.Iterable[global___Detection] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: detections() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Detection]
      :property:

      the bounding boxes and labels



.. py:class:: GetDetectorNamesRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      


.. py:class:: GetDetectorNamesResponse(*, detector_names: collections.abc.Iterable[builtins.str] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: detector_names() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:

      detectors in the registry



.. py:class:: GetObjectPointCloudsRequest(*, name: str = ..., camera_name: str = ..., segmenter_name: str = ..., mime_type: str = ..., parameters: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: camera_name
      :annotation: :str

      Name of a camera

   .. py:attribute:: segmenter_name
      :annotation: :str

      Name of the segmentation algorithm

   .. py:attribute:: mime_type
      :annotation: :str

      Requested MIME type of response

   .. py:method:: parameters() -> google.protobuf.struct_pb2.Struct
      :property:

      parameters for the chosen segmenter


   .. py:method:: HasField(field_name: Literal[parameters, b'parameters']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetObjectPointCloudsResponse(*, mime_type: str = ..., objects: collections.abc.Iterable[proto.api.common.v1.common_pb2.PointCloudObject] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: mime_type
      :annotation: :str

      Actual MIME type of response

   .. py:method:: objects() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.proto.api.common.v1.common_pb2.PointCloudObject]
      :property:

      List of objects in the scene



.. py:class:: GetSegmenterNamesRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      


.. py:class:: GetSegmenterNamesResponse(*, segmenter_names: collections.abc.Iterable[builtins.str] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: segmenter_names() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:

      segmenters in the registry



.. py:class:: GetSegmenterParametersRequest(*, name: str = ..., segmenter_name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: segmenter_name
      :annotation: :str

      Name of the segmentation algo


.. py:class:: GetSegmenterParametersResponse(*, segmenter_parameters: collections.abc.Iterable[global___TypedParameter] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: segmenter_parameters() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TypedParameter]
      :property:

      parameter names of the segmenter in the request



.. py:class:: TypedParameter(*, name: str = ..., type: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: type
      :annotation: :str

      


