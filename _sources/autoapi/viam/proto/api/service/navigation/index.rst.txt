:py:mod:`viam.proto.api.service.navigation`
===========================================

.. py:module:: viam.proto.api.service.navigation

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.api.service.navigation.NavigationServiceBase
   viam.proto.api.service.navigation.NavigationServiceStub
   viam.proto.api.service.navigation.AddWaypointRequest
   viam.proto.api.service.navigation.AddWaypointResponse
   viam.proto.api.service.navigation.GetLocationRequest
   viam.proto.api.service.navigation.GetLocationResponse
   viam.proto.api.service.navigation.GetModeRequest
   viam.proto.api.service.navigation.GetModeResponse
   viam.proto.api.service.navigation.GetWaypointsRequest
   viam.proto.api.service.navigation.GetWaypointsResponse
   viam.proto.api.service.navigation.RemoveWaypointRequest
   viam.proto.api.service.navigation.RemoveWaypointResponse
   viam.proto.api.service.navigation.SetModeRequest
   viam.proto.api.service.navigation.SetModeResponse
   viam.proto.api.service.navigation.Waypoint




.. py:class:: NavigationServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: GetMode(stream: grpclib.server.Stream[proto.api.service.navigation.v1.navigation_pb2.GetModeRequest, proto.api.service.navigation.v1.navigation_pb2.GetModeResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: SetMode(stream: grpclib.server.Stream[proto.api.service.navigation.v1.navigation_pb2.SetModeRequest, proto.api.service.navigation.v1.navigation_pb2.SetModeResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetLocation(stream: grpclib.server.Stream[proto.api.service.navigation.v1.navigation_pb2.GetLocationRequest, proto.api.service.navigation.v1.navigation_pb2.GetLocationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetWaypoints(stream: grpclib.server.Stream[proto.api.service.navigation.v1.navigation_pb2.GetWaypointsRequest, proto.api.service.navigation.v1.navigation_pb2.GetWaypointsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: AddWaypoint(stream: grpclib.server.Stream[proto.api.service.navigation.v1.navigation_pb2.AddWaypointRequest, proto.api.service.navigation.v1.navigation_pb2.AddWaypointResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: RemoveWaypoint(stream: grpclib.server.Stream[proto.api.service.navigation.v1.navigation_pb2.RemoveWaypointRequest, proto.api.service.navigation.v1.navigation_pb2.RemoveWaypointResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: NavigationServiceStub(channel: grpclib.client.Channel)


.. py:class:: AddWaypointRequest(*, name: Text = ..., location: Optional[viam.gen.proto.api.common.v1.common_pb2.GeoPoint] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :Text

      

   .. py:method:: location() -> viam.gen.proto.api.common.v1.common_pb2.GeoPoint
      :property:


   .. py:method:: HasField(field_name: typing_extensions.Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: AddWaypointResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: GetLocationRequest(*, name: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :Text

      


.. py:class:: GetLocationResponse(*, location: Optional[viam.gen.proto.api.common.v1.common_pb2.GeoPoint] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: location() -> viam.gen.proto.api.common.v1.common_pb2.GeoPoint
      :property:


   .. py:method:: HasField(field_name: typing_extensions.Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetModeRequest(*, name: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :Text

      


.. py:class:: GetModeResponse(*, mode: global___Mode = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: mode
      :annotation: :global___Mode

      


.. py:class:: GetWaypointsRequest(*, name: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :Text

      


.. py:class:: GetWaypointsResponse(*, waypoints: Optional[Iterable[global___Waypoint]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: waypoints() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Waypoint]
      :property:



.. py:class:: RemoveWaypointRequest(*, name: Text = ..., id: Text = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :Text

      

   .. py:attribute:: id
      :annotation: :Text

      


.. py:class:: RemoveWaypointResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: SetModeRequest(*, name: Text = ..., mode: global___Mode = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :Text

      

   .. py:attribute:: mode
      :annotation: :global___Mode

      


.. py:class:: SetModeResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: Waypoint(*, id: Text = ..., location: Optional[viam.gen.proto.api.common.v1.common_pb2.GeoPoint] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :Text

      

   .. py:method:: location() -> viam.gen.proto.api.common.v1.common_pb2.GeoPoint
      :property:


   .. py:method:: HasField(field_name: typing_extensions.Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



