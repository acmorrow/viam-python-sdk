:py:mod:`viam.proto.api.service.motion`
=======================================

.. py:module:: viam.proto.api.service.motion

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.api.service.motion.MotionServiceBase
   viam.proto.api.service.motion.MotionServiceStub
   viam.proto.api.service.motion.GetPoseRequest
   viam.proto.api.service.motion.GetPoseResponse
   viam.proto.api.service.motion.MoveSingleComponentRequest
   viam.proto.api.service.motion.MoveSingleComponentResponse
   viam.proto.api.service.motion.PlanAndMoveRequest
   viam.proto.api.service.motion.PlanAndMoveResponse




.. py:class:: MotionServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: PlanAndMove(stream: grpclib.server.Stream[proto.api.service.motion.v1.motion_pb2.PlanAndMoveRequest, proto.api.service.motion.v1.motion_pb2.PlanAndMoveResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: MoveSingleComponent(stream: grpclib.server.Stream[proto.api.service.motion.v1.motion_pb2.MoveSingleComponentRequest, proto.api.service.motion.v1.motion_pb2.MoveSingleComponentResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetPose(stream: grpclib.server.Stream[proto.api.service.motion.v1.motion_pb2.GetPoseRequest, proto.api.service.motion.v1.motion_pb2.GetPoseResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: MotionServiceStub(channel: grpclib.client.Channel)


.. py:class:: GetPoseRequest(*, component_name: Optional[viam.gen.proto.api.common.v1.common_pb2.ResourceName] = ..., destination_frame: Text = ..., supplemental_transforms: Optional[Iterable[viam.gen.proto.api.common.v1.common_pb2.Transform]] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: destination_frame
      :annotation: :Text

      the reference frame in which the component's pose
      should be provided, if unset this defaults
      to the "world" reference frame

   .. py:method:: component_name() -> viam.gen.proto.api.common.v1.common_pb2.ResourceName
      :property:

      the component whose pose is being requested


   .. py:method:: supplemental_transforms() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.proto.api.common.v1.common_pb2.Transform]
      :property:

      pose information on any additional reference frames that are needed
      to compute the component's pose


   .. py:method:: HasField(field_name: typing_extensions.Literal[component_name, b'component_name']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetPoseResponse(*, pose: Optional[viam.gen.proto.api.common.v1.common_pb2.PoseInFrame] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: pose() -> viam.gen.proto.api.common.v1.common_pb2.PoseInFrame
      :property:


   .. py:method:: HasField(field_name: typing_extensions.Literal[pose, b'pose']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: MoveSingleComponentRequest(*, destination: Optional[viam.gen.proto.api.common.v1.common_pb2.PoseInFrame] = ..., component_name: Optional[viam.gen.proto.api.common.v1.common_pb2.ResourceName] = ..., world_state: Optional[viam.gen.proto.api.common.v1.common_pb2.WorldState] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: destination() -> viam.gen.proto.api.common.v1.common_pb2.PoseInFrame
      :property:


   .. py:method:: component_name() -> viam.gen.proto.api.common.v1.common_pb2.ResourceName
      :property:


   .. py:method:: world_state() -> viam.gen.proto.api.common.v1.common_pb2.WorldState
      :property:


   .. py:method:: HasField(field_name: typing_extensions.Literal[_world_state, b'_world_state', component_name, b'component_name', destination, b'destination', world_state, b'world_state']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: typing_extensions.Literal[_world_state, b'_world_state']) -> Optional[typing_extensions.Literal[world_state]]

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: MoveSingleComponentResponse(*, success: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: success
      :annotation: :bool

      


.. py:class:: PlanAndMoveRequest(*, destination: Optional[viam.gen.proto.api.common.v1.common_pb2.PoseInFrame] = ..., component_name: Optional[viam.gen.proto.api.common.v1.common_pb2.ResourceName] = ..., world_state: Optional[viam.gen.proto.api.common.v1.common_pb2.WorldState] = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: destination() -> viam.gen.proto.api.common.v1.common_pb2.PoseInFrame
      :property:


   .. py:method:: component_name() -> viam.gen.proto.api.common.v1.common_pb2.ResourceName
      :property:


   .. py:method:: world_state() -> viam.gen.proto.api.common.v1.common_pb2.WorldState
      :property:


   .. py:method:: HasField(field_name: typing_extensions.Literal[_world_state, b'_world_state', component_name, b'component_name', destination, b'destination', world_state, b'world_state']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: typing_extensions.Literal[_world_state, b'_world_state']) -> Optional[typing_extensions.Literal[world_state]]

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: PlanAndMoveResponse(*, success: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: success
      :annotation: :bool

      


