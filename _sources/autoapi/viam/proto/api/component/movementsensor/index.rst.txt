:py:mod:`viam.proto.api.component.movementsensor`
=================================================

.. py:module:: viam.proto.api.component.movementsensor

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.api.component.movementsensor.MovementSensorServiceBase
   viam.proto.api.component.movementsensor.MovementSensorServiceStub
   viam.proto.api.component.movementsensor.GetAccuracyRequest
   viam.proto.api.component.movementsensor.GetAccuracyResponse
   viam.proto.api.component.movementsensor.GetAngularVelocityRequest
   viam.proto.api.component.movementsensor.GetAngularVelocityResponse
   viam.proto.api.component.movementsensor.GetCompassHeadingRequest
   viam.proto.api.component.movementsensor.GetCompassHeadingResponse
   viam.proto.api.component.movementsensor.GetLinearVelocityRequest
   viam.proto.api.component.movementsensor.GetLinearVelocityResponse
   viam.proto.api.component.movementsensor.GetOrientationRequest
   viam.proto.api.component.movementsensor.GetOrientationResponse
   viam.proto.api.component.movementsensor.GetPositionRequest
   viam.proto.api.component.movementsensor.GetPositionResponse
   viam.proto.api.component.movementsensor.GetPropertiesRequest
   viam.proto.api.component.movementsensor.GetPropertiesResponse




.. py:class:: MovementSensorServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: GetLinearVelocity(stream: grpclib.server.Stream[proto.api.component.movementsensor.v1.movementsensor_pb2.GetLinearVelocityRequest, proto.api.component.movementsensor.v1.movementsensor_pb2.GetLinearVelocityResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetAngularVelocity(stream: grpclib.server.Stream[proto.api.component.movementsensor.v1.movementsensor_pb2.GetAngularVelocityRequest, proto.api.component.movementsensor.v1.movementsensor_pb2.GetAngularVelocityResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetCompassHeading(stream: grpclib.server.Stream[proto.api.component.movementsensor.v1.movementsensor_pb2.GetCompassHeadingRequest, proto.api.component.movementsensor.v1.movementsensor_pb2.GetCompassHeadingResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetOrientation(stream: grpclib.server.Stream[proto.api.component.movementsensor.v1.movementsensor_pb2.GetOrientationRequest, proto.api.component.movementsensor.v1.movementsensor_pb2.GetOrientationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetPosition(stream: grpclib.server.Stream[proto.api.component.movementsensor.v1.movementsensor_pb2.GetPositionRequest, proto.api.component.movementsensor.v1.movementsensor_pb2.GetPositionResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetProperties(stream: grpclib.server.Stream[proto.api.component.movementsensor.v1.movementsensor_pb2.GetPropertiesRequest, proto.api.component.movementsensor.v1.movementsensor_pb2.GetPropertiesResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetAccuracy(stream: grpclib.server.Stream[proto.api.component.movementsensor.v1.movementsensor_pb2.GetAccuracyRequest, proto.api.component.movementsensor.v1.movementsensor_pb2.GetAccuracyResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: MovementSensorServiceStub(channel: grpclib.client.Channel)


.. py:class:: GetAccuracyRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a movement sensor


.. py:class:: GetAccuracyResponse(*, accuracy_mm: collections.abc.Mapping[builtins.str, builtins.float] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: AccuracyMmEntry(*, key: str = ..., value: float = ...)



      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :annotation: :str

         

      .. py:attribute:: value
         :annotation: :float

         


   .. py:method:: accuracy_mm() -> google.protobuf.internal.containers.ScalarMap[str, float]
      :property:



.. py:class:: GetAngularVelocityRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a movement sensor


.. py:class:: GetAngularVelocityResponse(*, angular_velocity: proto.api.common.v1.common_pb2.Vector3 | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: angular_velocity() -> viam.gen.proto.api.common.v1.common_pb2.Vector3
      :property:

      angular velocity contains velocity in degrees/s across x/y/z axes


   .. py:method:: HasField(field_name: Literal[angular_velocity, b'angular_velocity']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetCompassHeadingRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a movement sensor


.. py:class:: GetCompassHeadingResponse(*, value: float = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: value
      :annotation: :float

      A number from 0-359 where
      0 is North, 90 is East, 180 is South, and 270 is   West


.. py:class:: GetLinearVelocityRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a movement sensor


.. py:class:: GetLinearVelocityResponse(*, linear_velocity: proto.api.common.v1.common_pb2.Vector3 | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: linear_velocity() -> viam.gen.proto.api.common.v1.common_pb2.Vector3
      :property:

      linear velocity contains velocity in mm/s across x/y/z axes


   .. py:method:: HasField(field_name: Literal[linear_velocity, b'linear_velocity']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetOrientationRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a movement sensor


.. py:class:: GetOrientationResponse(*, orientation: proto.api.common.v1.common_pb2.Orientation | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: orientation() -> viam.gen.proto.api.common.v1.common_pb2.Orientation
      :property:


   .. py:method:: HasField(field_name: Literal[orientation, b'orientation']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetPositionRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a movement sensor


.. py:class:: GetPositionResponse(*, coordinate: proto.api.common.v1.common_pb2.GeoPoint | None = ..., altitude_mm: float = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: altitude_mm
      :annotation: :float

      

   .. py:method:: coordinate() -> viam.gen.proto.api.common.v1.common_pb2.GeoPoint
      :property:


   .. py:method:: HasField(field_name: Literal[coordinate, b'coordinate']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetPropertiesRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a movement sensor


.. py:class:: GetPropertiesResponse(*, linear_velocity_supported: bool = ..., angular_velocity_supported: bool = ..., orientation_supported: bool = ..., position_supported: bool = ..., compass_heading_supported: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: linear_velocity_supported
      :annotation: :bool

      

   .. py:attribute:: angular_velocity_supported
      :annotation: :bool

      

   .. py:attribute:: orientation_supported
      :annotation: :bool

      

   .. py:attribute:: position_supported
      :annotation: :bool

      

   .. py:attribute:: compass_heading_supported
      :annotation: :bool

      


