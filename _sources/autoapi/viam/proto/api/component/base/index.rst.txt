:py:mod:`viam.proto.api.component.base`
=======================================

.. py:module:: viam.proto.api.component.base

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.api.component.base.BaseServiceBase
   viam.proto.api.component.base.BaseServiceStub
   viam.proto.api.component.base.MoveStraightRequest
   viam.proto.api.component.base.MoveStraightResponse
   viam.proto.api.component.base.SetPowerRequest
   viam.proto.api.component.base.SetPowerResponse
   viam.proto.api.component.base.SetVelocityRequest
   viam.proto.api.component.base.SetVelocityResponse
   viam.proto.api.component.base.SpinRequest
   viam.proto.api.component.base.SpinResponse
   viam.proto.api.component.base.StopRequest
   viam.proto.api.component.base.StopResponse




.. py:class:: BaseServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: MoveStraight(stream: grpclib.server.Stream[proto.api.component.base.v1.base_pb2.MoveStraightRequest, proto.api.component.base.v1.base_pb2.MoveStraightResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Spin(stream: grpclib.server.Stream[proto.api.component.base.v1.base_pb2.SpinRequest, proto.api.component.base.v1.base_pb2.SpinResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: SetPower(stream: grpclib.server.Stream[proto.api.component.base.v1.base_pb2.SetPowerRequest, proto.api.component.base.v1.base_pb2.SetPowerResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: SetVelocity(stream: grpclib.server.Stream[proto.api.component.base.v1.base_pb2.SetVelocityRequest, proto.api.component.base.v1.base_pb2.SetVelocityResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Stop(stream: grpclib.server.Stream[proto.api.component.base.v1.base_pb2.StopRequest, proto.api.component.base.v1.base_pb2.StopResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: BaseServiceStub(channel: grpclib.client.Channel)


.. py:class:: MoveStraightRequest(*, name: str = ..., distance_mm: int = ..., mm_per_sec: float = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a base

   .. py:attribute:: distance_mm
      :annotation: :int

      Desired travel distance in millimeters

   .. py:attribute:: mm_per_sec
      :annotation: :float

      Desired travel velocity in millimeters/second

   .. py:method:: extra() -> google.protobuf.struct_pb2.Struct
      :property:

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: MoveStraightResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: SetPowerRequest(*, name: str = ..., linear: proto.api.common.v1.common_pb2.Vector3 | None = ..., angular: proto.api.common.v1.common_pb2.Vector3 | None = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a base

   .. py:method:: linear() -> viam.gen.proto.api.common.v1.common_pb2.Vector3
      :property:

      Desired linear power percentage as -1 -> 1


   .. py:method:: angular() -> viam.gen.proto.api.common.v1.common_pb2.Vector3
      :property:

      Desired angular power percentage % as -1 -> 1


   .. py:method:: extra() -> google.protobuf.struct_pb2.Struct
      :property:

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal[angular, b'angular', extra, b'extra', linear, b'linear']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: SetPowerResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: SetVelocityRequest(*, name: str = ..., linear: proto.api.common.v1.common_pb2.Vector3 | None = ..., angular: proto.api.common.v1.common_pb2.Vector3 | None = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a base

   .. py:method:: linear() -> viam.gen.proto.api.common.v1.common_pb2.Vector3
      :property:

      Desired linear velocity in mm per second


   .. py:method:: angular() -> viam.gen.proto.api.common.v1.common_pb2.Vector3
      :property:

      Desired angular velocity in degrees per second


   .. py:method:: extra() -> google.protobuf.struct_pb2.Struct
      :property:

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal[angular, b'angular', extra, b'extra', linear, b'linear']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: SetVelocityResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: SpinRequest(*, name: str = ..., angle_deg: float = ..., degs_per_sec: float = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a base

   .. py:attribute:: angle_deg
      :annotation: :float

      Desired angle

   .. py:attribute:: degs_per_sec
      :annotation: :float

      Desired angular velocity

   .. py:method:: extra() -> google.protobuf.struct_pb2.Struct
      :property:

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: SpinResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: StopRequest(*, name: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      Name of a base

   .. py:method:: extra() -> google.protobuf.struct_pb2.Struct
      :property:

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: StopResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


