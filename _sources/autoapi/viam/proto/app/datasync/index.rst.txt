:py:mod:`viam.proto.app.datasync`
=================================

.. py:module:: viam.proto.app.datasync

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.app.datasync.DataSyncServiceBase
   viam.proto.app.datasync.DataSyncServiceStub
   viam.proto.app.datasync.BinaryCapture
   viam.proto.app.datasync.CaptureInterval
   viam.proto.app.datasync.DataCaptureMetadata
   viam.proto.app.datasync.DataType
   viam.proto.app.datasync.FileData
   viam.proto.app.datasync.SensorData
   viam.proto.app.datasync.SensorMetadata
   viam.proto.app.datasync.TabularCapture
   viam.proto.app.datasync.UploadMetadata
   viam.proto.app.datasync.UploadRequest
   viam.proto.app.datasync.UploadResponse




.. py:class:: DataSyncServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Upload(stream: grpclib.server.Stream[app.datasync.v1.data_sync_pb2.UploadRequest, app.datasync.v1.data_sync_pb2.UploadResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: DataSyncServiceStub(channel: grpclib.client.Channel)


.. py:class:: BinaryCapture(*, interval: global___CaptureInterval | None = ..., org_id: str = ..., robot_id: str = ..., part_id: str = ..., location_id: str = ..., component_name: str = ..., component_type: str = ..., component_model: str = ..., method_name: str = ..., blob_path: str = ..., method_parameters: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ..., file_id: str = ..., tags: collections.abc.Iterable[builtins.str] | None = ..., file_size_bytes: int = ..., session_id: str = ..., mime_type: str = ..., file_name: str = ..., file_ext: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: MethodParametersEntry(*, key: str = ..., value: google.protobuf.any_pb2.Any | None = ...)



      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :annotation: :str

         

      .. py:method:: value() -> google.protobuf.any_pb2.Any
         :property:


      .. py:method:: HasField(field_name: Literal[value, b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.



   .. py:attribute:: org_id
      :annotation: :str

      

   .. py:attribute:: robot_id
      :annotation: :str

      

   .. py:attribute:: part_id
      :annotation: :str

      

   .. py:attribute:: location_id
      :annotation: :str

      

   .. py:attribute:: component_name
      :annotation: :str

      

   .. py:attribute:: component_type
      :annotation: :str

      

   .. py:attribute:: component_model
      :annotation: :str

      

   .. py:attribute:: method_name
      :annotation: :str

      

   .. py:attribute:: blob_path
      :annotation: :str

      

   .. py:attribute:: file_id
      :annotation: :str

      

   .. py:attribute:: file_size_bytes
      :annotation: :int

      

   .. py:attribute:: session_id
      :annotation: :str

      

   .. py:attribute:: mime_type
      :annotation: :str

      

   .. py:attribute:: file_name
      :annotation: :str

      

   .. py:attribute:: file_ext
      :annotation: :str

      

   .. py:method:: interval() -> global___CaptureInterval
      :property:


   .. py:method:: method_parameters() -> google.protobuf.internal.containers.MessageMap[str, google.protobuf.any_pb2.Any]
      :property:


   .. py:method:: tags() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:


   .. py:method:: HasField(field_name: Literal[interval, b'interval']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CaptureInterval(*, start: google.protobuf.timestamp_pb2.Timestamp | None = ..., end: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: start() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: end() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(field_name: Literal[end, b'end', start, b'start']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DataCaptureMetadata(*, component_type: str = ..., component_name: str = ..., component_model: str = ..., method_name: str = ..., type: global___DataType = ..., method_parameters: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ..., file_extension: str = ..., tags: collections.abc.Iterable[builtins.str] | None = ..., session_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: MethodParametersEntry(*, key: str = ..., value: google.protobuf.any_pb2.Any | None = ...)



      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :annotation: :str

         

      .. py:method:: value() -> google.protobuf.any_pb2.Any
         :property:


      .. py:method:: HasField(field_name: Literal[value, b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.



   .. py:attribute:: component_type
      :annotation: :str

      

   .. py:attribute:: component_name
      :annotation: :str

      

   .. py:attribute:: component_model
      :annotation: :str

      

   .. py:attribute:: method_name
      :annotation: :str

      

   .. py:attribute:: type
      :annotation: :global___DataType

      

   .. py:attribute:: file_extension
      :annotation: :str

      

   .. py:attribute:: session_id
      :annotation: :str

      

   .. py:method:: method_parameters() -> google.protobuf.internal.containers.MessageMap[str, google.protobuf.any_pb2.Any]
      :property:


   .. py:method:: tags() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:



.. py:class:: DataType




.. py:class:: FileData(*, data: bytes = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: data
      :annotation: :bytes

      


.. py:class:: SensorData(*, metadata: global___SensorMetadata | None = ..., struct: google.protobuf.struct_pb2.Struct | None = ..., binary: bytes = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: binary
      :annotation: :bytes

      

   .. py:method:: metadata() -> global___SensorMetadata
      :property:


   .. py:method:: struct() -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: HasField(field_name: Literal[binary, b'binary', data, b'data', metadata, b'metadata', struct, b'struct']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[data, b'data']) -> typing_extensions.Literal['struct', 'binary'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: SensorMetadata(*, time_requested: google.protobuf.timestamp_pb2.Timestamp | None = ..., time_received: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: time_requested() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: time_received() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(field_name: Literal[time_received, b'time_received', time_requested, b'time_requested']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: TabularCapture(*, interval: global___CaptureInterval | None = ..., org_id: str = ..., robot_id: str = ..., part_id: str = ..., location_id: str = ..., component_name: str = ..., component_type: str = ..., component_model: str = ..., method_name: str = ..., blob_path: str = ..., column_names: collections.abc.Iterable[builtins.str] | None = ..., method_parameters: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ..., file_id: str = ..., tags: collections.abc.Iterable[builtins.str] | None = ..., message_count: int = ..., file_size_bytes: int = ..., session_id: str = ..., mime_type: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: MethodParametersEntry(*, key: str = ..., value: google.protobuf.any_pb2.Any | None = ...)



      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :annotation: :str

         

      .. py:method:: value() -> google.protobuf.any_pb2.Any
         :property:


      .. py:method:: HasField(field_name: Literal[value, b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.



   .. py:attribute:: org_id
      :annotation: :str

      

   .. py:attribute:: robot_id
      :annotation: :str

      

   .. py:attribute:: part_id
      :annotation: :str

      

   .. py:attribute:: location_id
      :annotation: :str

      

   .. py:attribute:: component_name
      :annotation: :str

      

   .. py:attribute:: component_type
      :annotation: :str

      

   .. py:attribute:: component_model
      :annotation: :str

      

   .. py:attribute:: method_name
      :annotation: :str

      

   .. py:attribute:: blob_path
      :annotation: :str

      

   .. py:attribute:: file_id
      :annotation: :str

      

   .. py:attribute:: message_count
      :annotation: :int

      

   .. py:attribute:: file_size_bytes
      :annotation: :int

      

   .. py:attribute:: session_id
      :annotation: :str

      

   .. py:attribute:: mime_type
      :annotation: :str

      

   .. py:method:: interval() -> global___CaptureInterval
      :property:


   .. py:method:: column_names() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:


   .. py:method:: method_parameters() -> google.protobuf.internal.containers.MessageMap[str, google.protobuf.any_pb2.Any]
      :property:


   .. py:method:: tags() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:


   .. py:method:: HasField(field_name: Literal[interval, b'interval']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UploadMetadata(*, part_id: str = ..., component_type: str = ..., component_name: str = ..., component_model: str = ..., method_name: str = ..., type: global___DataType = ..., file_name: str = ..., method_parameters: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ..., file_extension: str = ..., tags: collections.abc.Iterable[builtins.str] | None = ..., session_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: MethodParametersEntry(*, key: str = ..., value: google.protobuf.any_pb2.Any | None = ...)



      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :annotation: :str

         

      .. py:method:: value() -> google.protobuf.any_pb2.Any
         :property:


      .. py:method:: HasField(field_name: Literal[value, b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.



   .. py:attribute:: part_id
      :annotation: :str

      

   .. py:attribute:: component_type
      :annotation: :str

      

   .. py:attribute:: component_name
      :annotation: :str

      

   .. py:attribute:: component_model
      :annotation: :str

      

   .. py:attribute:: method_name
      :annotation: :str

      

   .. py:attribute:: type
      :annotation: :global___DataType

      

   .. py:attribute:: file_name
      :annotation: :str

      

   .. py:attribute:: file_extension
      :annotation: :str

      

   .. py:attribute:: session_id
      :annotation: :str

      

   .. py:method:: method_parameters() -> google.protobuf.internal.containers.MessageMap[str, google.protobuf.any_pb2.Any]
      :property:


   .. py:method:: tags() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:



.. py:class:: UploadRequest(*, metadata: global___UploadMetadata | None = ..., sensor_contents: global___SensorData | None = ..., file_contents: global___FileData | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: metadata() -> global___UploadMetadata
      :property:


   .. py:method:: sensor_contents() -> global___SensorData
      :property:


   .. py:method:: file_contents() -> global___FileData
      :property:


   .. py:method:: HasField(field_name: Literal[file_contents, b'file_contents', metadata, b'metadata', sensor_contents, b'sensor_contents', upload_packet, b'upload_packet']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[upload_packet, b'upload_packet']) -> typing_extensions.Literal['metadata', 'sensor_contents', 'file_contents'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UploadResponse(*, requests_written: int = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: requests_written
      :annotation: :int

      


