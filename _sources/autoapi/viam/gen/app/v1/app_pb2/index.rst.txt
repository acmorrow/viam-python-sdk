:py:mod:`viam.gen.app.v1.app_pb2`
=================================

.. py:module:: viam.gen.app.v1.app_pb2

.. autoapi-nested-parse::

   @generated by mypy-protobuf.  Do not edit manually!
   isort:skip_file



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.gen.app.v1.app_pb2.Robot
   viam.gen.app.v1.app_pb2.RobotPart
   viam.gen.app.v1.app_pb2.RobotPartHistoryEntry
   viam.gen.app.v1.app_pb2.ListOrganizationsRequest
   viam.gen.app.v1.app_pb2.Organization
   viam.gen.app.v1.app_pb2.ListOrganizationsResponse
   viam.gen.app.v1.app_pb2.Location
   viam.gen.app.v1.app_pb2.ListLocationsRequest
   viam.gen.app.v1.app_pb2.ListLocationsResponse
   viam.gen.app.v1.app_pb2.LocationAuth
   viam.gen.app.v1.app_pb2.LocationAuthRequest
   viam.gen.app.v1.app_pb2.LocationAuthResponse
   viam.gen.app.v1.app_pb2.GetRobotRequest
   viam.gen.app.v1.app_pb2.GetRobotResponse
   viam.gen.app.v1.app_pb2.GetRobotPartsRequest
   viam.gen.app.v1.app_pb2.GetRobotPartsResponse
   viam.gen.app.v1.app_pb2.GetRobotPartRequest
   viam.gen.app.v1.app_pb2.GetRobotPartResponse
   viam.gen.app.v1.app_pb2.GetRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.LogEntry
   viam.gen.app.v1.app_pb2.GetRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.TailRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.TailRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.GetRobotPartHistoryRequest
   viam.gen.app.v1.app_pb2.GetRobotPartHistoryResponse
   viam.gen.app.v1.app_pb2.UpdateRobotPartRequest
   viam.gen.app.v1.app_pb2.UpdateRobotPartResponse
   viam.gen.app.v1.app_pb2.NewRobotPartRequest
   viam.gen.app.v1.app_pb2.NewRobotPartResponse
   viam.gen.app.v1.app_pb2.DeleteRobotPartRequest
   viam.gen.app.v1.app_pb2.DeleteRobotPartResponse
   viam.gen.app.v1.app_pb2.Fragment
   viam.gen.app.v1.app_pb2.FindRobotsRequest
   viam.gen.app.v1.app_pb2.FindRobotsResponse
   viam.gen.app.v1.app_pb2.NewRobotRequest
   viam.gen.app.v1.app_pb2.NewRobotResponse
   viam.gen.app.v1.app_pb2.UpdateRobotRequest
   viam.gen.app.v1.app_pb2.UpdateRobotResponse
   viam.gen.app.v1.app_pb2.DeleteRobotRequest
   viam.gen.app.v1.app_pb2.DeleteRobotResponse
   viam.gen.app.v1.app_pb2.MarkPartAsMainRequest
   viam.gen.app.v1.app_pb2.MarkPartAsMainResponse




Attributes
~~~~~~~~~~

.. autoapisummary::

   viam.gen.app.v1.app_pb2.DESCRIPTOR
   viam.gen.app.v1.app_pb2.global___Robot
   viam.gen.app.v1.app_pb2.global___RobotPart
   viam.gen.app.v1.app_pb2.global___RobotPartHistoryEntry
   viam.gen.app.v1.app_pb2.global___ListOrganizationsRequest
   viam.gen.app.v1.app_pb2.global___Organization
   viam.gen.app.v1.app_pb2.global___ListOrganizationsResponse
   viam.gen.app.v1.app_pb2.global___Location
   viam.gen.app.v1.app_pb2.global___ListLocationsRequest
   viam.gen.app.v1.app_pb2.global___ListLocationsResponse
   viam.gen.app.v1.app_pb2.global___LocationAuth
   viam.gen.app.v1.app_pb2.global___LocationAuthRequest
   viam.gen.app.v1.app_pb2.global___LocationAuthResponse
   viam.gen.app.v1.app_pb2.global___GetRobotRequest
   viam.gen.app.v1.app_pb2.global___GetRobotResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartsRequest
   viam.gen.app.v1.app_pb2.global___GetRobotPartsResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartRequest
   viam.gen.app.v1.app_pb2.global___GetRobotPartResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.global___LogEntry
   viam.gen.app.v1.app_pb2.global___GetRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.global___TailRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.global___TailRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartHistoryRequest
   viam.gen.app.v1.app_pb2.global___GetRobotPartHistoryResponse
   viam.gen.app.v1.app_pb2.global___UpdateRobotPartRequest
   viam.gen.app.v1.app_pb2.global___UpdateRobotPartResponse
   viam.gen.app.v1.app_pb2.global___NewRobotPartRequest
   viam.gen.app.v1.app_pb2.global___NewRobotPartResponse
   viam.gen.app.v1.app_pb2.global___DeleteRobotPartRequest
   viam.gen.app.v1.app_pb2.global___DeleteRobotPartResponse
   viam.gen.app.v1.app_pb2.global___Fragment
   viam.gen.app.v1.app_pb2.global___FindRobotsRequest
   viam.gen.app.v1.app_pb2.global___FindRobotsResponse
   viam.gen.app.v1.app_pb2.global___NewRobotRequest
   viam.gen.app.v1.app_pb2.global___NewRobotResponse
   viam.gen.app.v1.app_pb2.global___UpdateRobotRequest
   viam.gen.app.v1.app_pb2.global___UpdateRobotResponse
   viam.gen.app.v1.app_pb2.global___DeleteRobotRequest
   viam.gen.app.v1.app_pb2.global___DeleteRobotResponse
   viam.gen.app.v1.app_pb2.global___MarkPartAsMainRequest
   viam.gen.app.v1.app_pb2.global___MarkPartAsMainResponse


.. py:data:: DESCRIPTOR
   :annotation: :google.protobuf.descriptor.FileDescriptor

   

.. py:class:: Robot(*, id: str = ..., name: str = ..., location: str = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: location
      :annotation: :str

      

   .. py:method:: last_access() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: created_on() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', last_access, b'last_access']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Robot
   

   

.. py:class:: RobotPart(*, id: str = ..., name: str = ..., dns_name: str = ..., secret: str = ..., robot: str = ..., location_id: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., user_supplied_info: google.protobuf.struct_pb2.Struct | None = ..., main_part: bool = ..., fqdn: str = ..., local_fqdn: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: dns_name
      :annotation: :str

      dns_name part name used for fqdn and local fqdn. Anytime the Name is updated this should be sanitized and updated as well.

   .. py:attribute:: secret
      :annotation: :str

      

   .. py:attribute:: robot
      :annotation: :str

      

   .. py:attribute:: location_id
      :annotation: :str

      Store the location_id to allow for unique indexes across parts and locations. This filed MUST be updated each time the robots location
      changes.

   .. py:attribute:: main_part
      :annotation: :bool

      

   .. py:attribute:: fqdn
      :annotation: :str

      

   .. py:attribute:: local_fqdn
      :annotation: :str

      

   .. py:method:: robot_config() -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: last_access() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: user_supplied_info() -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: created_on() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', last_access, b'last_access', robot_config, b'robot_config', user_supplied_info, b'user_supplied_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___RobotPart
   

   

.. py:class:: RobotPartHistoryEntry(*, part: str = ..., robot: str = ..., when: google.protobuf.timestamp_pb2.Timestamp | None = ..., old: global___RobotPart | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part
      :annotation: :str

      

   .. py:attribute:: robot
      :annotation: :str

      

   .. py:method:: when() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: old() -> global___RobotPart
      :property:


   .. py:method:: HasField(field_name: Literal[old, b'old', when, b'when']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___RobotPartHistoryEntry
   

   

.. py:class:: ListOrganizationsRequest



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___ListOrganizationsRequest
   

   

.. py:class:: Organization(*, id: str = ..., name: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: name
      :annotation: :str

      

   .. py:method:: created_on() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Organization
   

   

.. py:class:: ListOrganizationsResponse(*, organizations: collections.abc.Iterable[global___Organization] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: organizations() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Organization]
      :property:



.. py:data:: global___ListOrganizationsResponse
   

   

.. py:class:: Location(*, id: str = ..., name: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: name
      :annotation: :str

      

   .. py:method:: created_on() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Location
   

   

.. py:class:: ListLocationsRequest(*, organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :annotation: :str

      


.. py:data:: global___ListLocationsRequest
   

   

.. py:class:: ListLocationsResponse(*, locations: collections.abc.Iterable[global___Location] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: locations() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Location]
      :property:



.. py:data:: global___ListLocationsResponse
   

   

.. py:class:: LocationAuth(*, secret: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: secret
      :annotation: :str

      


.. py:data:: global___LocationAuth
   

   

.. py:class:: LocationAuthRequest(*, location_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :annotation: :str

      


.. py:data:: global___LocationAuthRequest
   

   

.. py:class:: LocationAuthResponse(*, auth: global___LocationAuth | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: auth() -> global___LocationAuth
      :property:


   .. py:method:: HasField(field_name: Literal[auth, b'auth']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___LocationAuthResponse
   

   

.. py:class:: GetRobotRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      


.. py:data:: global___GetRobotRequest
   

   

.. py:class:: GetRobotResponse(*, robot: global___Robot | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: robot() -> global___Robot
      :property:


   .. py:method:: HasField(field_name: Literal[robot, b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetRobotResponse
   

   

.. py:class:: GetRobotPartsRequest(*, robot_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :annotation: :str

      


.. py:data:: global___GetRobotPartsRequest
   

   

.. py:class:: GetRobotPartsResponse(*, parts: collections.abc.Iterable[global___RobotPart] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: parts() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPart]
      :property:



.. py:data:: global___GetRobotPartsResponse
   

   

.. py:class:: GetRobotPartRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      


.. py:data:: global___GetRobotPartRequest
   

   

.. py:class:: GetRobotPartResponse(*, part: global___RobotPart | None = ..., config_json: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: config_json
      :annotation: :str

      

   .. py:method:: part() -> global___RobotPart
      :property:


   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetRobotPartResponse
   

   

.. py:class:: GetRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: errors_only
      :annotation: :bool

      


.. py:data:: global___GetRobotPartLogsRequest
   

   

.. py:class:: LogEntry(*, host: str = ..., level: str = ..., time: google.protobuf.timestamp_pb2.Timestamp | None = ..., logger_name: str = ..., message: str = ..., caller: google.protobuf.struct_pb2.Struct | None = ..., stack: str = ..., fields: collections.abc.Iterable[google.protobuf.struct_pb2.Struct] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: host
      :annotation: :str

      

   .. py:attribute:: level
      :annotation: :str

      

   .. py:attribute:: logger_name
      :annotation: :str

      

   .. py:attribute:: message
      :annotation: :str

      

   .. py:attribute:: stack
      :annotation: :str

      

   .. py:method:: time() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: caller() -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: fields() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.struct_pb2.Struct]
      :property:


   .. py:method:: HasField(field_name: Literal[caller, b'caller', time, b'time']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___LogEntry
   

   

.. py:class:: GetRobotPartLogsResponse(*, logs: collections.abc.Iterable[global___LogEntry] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: logs() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogEntry]
      :property:



.. py:data:: global___GetRobotPartLogsResponse
   

   

.. py:class:: TailRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: errors_only
      :annotation: :bool

      


.. py:data:: global___TailRobotPartLogsRequest
   

   

.. py:class:: TailRobotPartLogsResponse(*, logs: collections.abc.Iterable[global___LogEntry] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: logs() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogEntry]
      :property:



.. py:data:: global___TailRobotPartLogsResponse
   

   

.. py:class:: GetRobotPartHistoryRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      


.. py:data:: global___GetRobotPartHistoryRequest
   

   

.. py:class:: GetRobotPartHistoryResponse(*, history: collections.abc.Iterable[global___RobotPartHistoryEntry] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: history() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPartHistoryEntry]
      :property:



.. py:data:: global___GetRobotPartHistoryResponse
   

   

.. py:class:: UpdateRobotPartRequest(*, id: str = ..., name: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: name
      :annotation: :str

      

   .. py:method:: robot_config() -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: HasField(field_name: Literal[robot_config, b'robot_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateRobotPartRequest
   

   

.. py:class:: UpdateRobotPartResponse(*, part: global___RobotPart | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: part() -> global___RobotPart
      :property:


   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateRobotPartResponse
   

   

.. py:class:: NewRobotPartRequest(*, robot_id: str = ..., part_name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :annotation: :str

      

   .. py:attribute:: part_name
      :annotation: :str

      


.. py:data:: global___NewRobotPartRequest
   

   

.. py:class:: NewRobotPartResponse(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :annotation: :str

      


.. py:data:: global___NewRobotPartResponse
   

   

.. py:class:: DeleteRobotPartRequest(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :annotation: :str

      


.. py:data:: global___DeleteRobotPartRequest
   

   

.. py:class:: DeleteRobotPartResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteRobotPartResponse
   

   

.. py:class:: Fragment(*, id: str = ..., name: str = ..., fragment: google.protobuf.struct_pb2.Struct | None = ..., organization_owner: str = ..., public: bool = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: organization_owner
      :annotation: :str

      

   .. py:attribute:: public
      :annotation: :bool

      

   .. py:method:: fragment() -> google.protobuf.struct_pb2.Struct
      :property:


   .. py:method:: created_on() -> google.protobuf.timestamp_pb2.Timestamp
      :property:


   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Fragment
   

   

.. py:class:: FindRobotsRequest(*, location_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :annotation: :str

      


.. py:data:: global___FindRobotsRequest
   

   

.. py:class:: FindRobotsResponse(*, robots: collections.abc.Iterable[global___Robot] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: robots() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]
      :property:



.. py:data:: global___FindRobotsResponse
   

   

.. py:class:: NewRobotRequest(*, name: str = ..., location: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: location
      :annotation: :str

      


.. py:data:: global___NewRobotRequest
   

   

.. py:class:: NewRobotResponse(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      


.. py:data:: global___NewRobotResponse
   

   

.. py:class:: UpdateRobotRequest(*, id: str = ..., name: str = ..., location: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      

   .. py:attribute:: name
      :annotation: :str

      

   .. py:attribute:: location
      :annotation: :str

      


.. py:data:: global___UpdateRobotRequest
   

   

.. py:class:: UpdateRobotResponse(*, robot: global___Robot | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: robot() -> global___Robot
      :property:


   .. py:method:: HasField(field_name: Literal[robot, b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateRobotResponse
   

   

.. py:class:: DeleteRobotRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :annotation: :str

      


.. py:data:: global___DeleteRobotRequest
   

   

.. py:class:: DeleteRobotResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteRobotResponse
   

   

.. py:class:: MarkPartAsMainRequest(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :annotation: :str

      


.. py:data:: global___MarkPartAsMainRequest
   

   

.. py:class:: MarkPartAsMainResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___MarkPartAsMainResponse
   

   

