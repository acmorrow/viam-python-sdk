:py:mod:`viam.gen.component.inputcontroller.v1.input_controller_pb2`
====================================================================

.. py:module:: viam.gen.component.inputcontroller.v1.input_controller_pb2

.. autoapi-nested-parse::

   @generated by mypy-protobuf.  Do not edit manually!
   isort:skip_file



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.gen.component.inputcontroller.v1.input_controller_pb2.GetControlsRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.GetControlsResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.GetEventsRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.GetEventsResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.TriggerEventRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.TriggerEventResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.Event
   viam.gen.component.inputcontroller.v1.input_controller_pb2.StreamEventsRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.StreamEventsResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.Status




Attributes
~~~~~~~~~~

.. autoapisummary::

   viam.gen.component.inputcontroller.v1.input_controller_pb2.DESCRIPTOR
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___GetControlsRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___GetControlsResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___GetEventsRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___GetEventsResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___TriggerEventRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___TriggerEventResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___Event
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___StreamEventsRequest
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___StreamEventsResponse
   viam.gen.component.inputcontroller.v1.input_controller_pb2.global___Status


.. py:data:: DESCRIPTOR
   :annotation: :google.protobuf.descriptor.FileDescriptor

   

.. py:class:: GetControlsRequest(*, controller: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: controller
      :annotation: :str

      Name of an input controller


.. py:data:: global___GetControlsRequest
   

   

.. py:class:: GetControlsResponse(*, controls: collections.abc.Iterable[builtins.str] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: controls() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
      :property:

      Returns a list of all the controls (buttons and axes) that are
      available to a given Input Controller



.. py:data:: global___GetControlsResponse
   

   

.. py:class:: GetEventsRequest(*, controller: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: controller
      :annotation: :str

      Name of an input controller


.. py:data:: global___GetEventsRequest
   

   

.. py:class:: GetEventsResponse(*, events: collections.abc.Iterable[global___Event] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: events() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Event]
      :property:

      Returns a list of the most recent event for each control on a given InputController. Effectively provides the current "state" of all
      buttons/axes on a given input controller



.. py:data:: global___GetEventsResponse
   

   

.. py:class:: TriggerEventRequest(*, controller: str = ..., event: global___Event | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: controller
      :annotation: :str

      Name of an input controller

   .. py:method:: event() -> global___Event
      :property:

      Digitally assert a given event


   .. py:method:: HasField(field_name: Literal[event, b'event']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___TriggerEventRequest
   

   

.. py:class:: TriggerEventResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___TriggerEventResponse
   

   

.. py:class:: Event(*, time: google.protobuf.timestamp_pb2.Timestamp | None = ..., event: str = ..., control: str = ..., value: float = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: event
      :annotation: :str

      ButtonPress, ButtonRelease)

      :type: An event type (eg

   .. py:attribute:: control
      :annotation: :str

      AbsoluteX)

      :type: A control, can be a button (eg

      :type: ButtonSouth) or an axis (eg

   .. py:attribute:: value
      :annotation: :float

      0 or 1 for buttons, -1.0 to +1.0 for axes

   .. py:method:: time() -> google.protobuf.timestamp_pb2.Timestamp
      :property:

      Timestamp of event


   .. py:method:: HasField(field_name: Literal[time, b'time']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Event
   

   

.. py:class:: StreamEventsRequest(*, controller: str = ..., events: collections.abc.Iterable[global___StreamEventsRequest.Events] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: Events(*, control: str = ..., events: collections.abc.Iterable[builtins.str] | None = ..., cancelled_events: collections.abc.Iterable[builtins.str] | None = ...)



      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: control
         :annotation: :str

         Name of a control (button or axis)

      .. py:method:: events() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
         :property:

         Specify which event types to recieve events for
         To Do (FA): Right now this can be an empty list, but we should error in this case as opening a stream with no messages is expensive


      .. py:method:: cancelled_events() -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]
         :property:

         Specify which event types to stop recieving events for
         This can be an empty list



   .. py:attribute:: controller
      :annotation: :str

      Name of an input controller

   .. py:method:: events() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StreamEventsRequest]
      :property:

      A list of Events



.. py:data:: global___StreamEventsRequest
   

   

.. py:class:: StreamEventsResponse(*, event: global___Event | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: event() -> global___Event
      :property:

      Event for a controller


   .. py:method:: HasField(field_name: Literal[event, b'event']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___StreamEventsResponse
   

   

.. py:class:: Status(*, events: collections.abc.Iterable[global___Event] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:method:: events() -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Event]
      :property:



.. py:data:: global___Status
   

   

