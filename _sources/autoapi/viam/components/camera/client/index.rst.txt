:py:mod:`viam.components.camera.client`
=======================================

.. py:module:: viam.components.camera.client


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.camera.client.CameraClient




.. py:class:: CameraClient(name: str, channel: grpclib.client.Channel)



   gRPC client for the Camera component

   .. py:method:: get_image(mime_type: str = CameraMimeType.PNG) -> Union[PIL.Image.Image, viam.components.types.RawImage]
      :async:

      Get the next image from the camera as an Image or RawImage.
      Be sure to close the image when finished.

      :param mime_type: The desired mime type of the image. This does not guarantee output type
      :type mime_type: str

      :returns: The frame
      :rtype: Image | RawImage


   .. py:method:: get_point_cloud() -> Tuple[bytes, str]
      :async:

      Get the next point cloud from the camera. This will be
      returned as bytes with a mimetype describing
      the structure of the data. The consumer of this call
      should encode the bytes into the formatted suggested
      by the mimetype.

      :returns: The pointcloud data.
                str: The mimetype of the pointcloud (e.g. PCD).
      :rtype: bytes


   .. py:method:: get_properties() -> viam.components.camera.camera.Camera.Properties
      :async:

      Get the camera intrinsic parameters and camera distortion parameters

      :returns: The properties of the camera
      :rtype: Properties


   .. py:method:: do_command(command: Dict[str, Any]) -> Dict[str, Any]
      :async:

      Send/Receive arbitrary commands

      :param command: The command to execute
      :type command: Dict[str, Any]

      :raises NotImplementedError: Raised if the component does not support arbitrary commands

      :returns: Result of the executed command
      :rtype: Dict[str, Any]



