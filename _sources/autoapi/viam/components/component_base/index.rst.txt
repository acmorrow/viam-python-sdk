:py:mod:`viam.components.component_base`
========================================

.. py:module:: viam.components.component_base


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.component_base.ComponentBase




.. py:class:: ComponentBase(name: str)



   Base component.
   All components must inherit from this class.

   .. py:method:: get_resource_name(cls, name: str) -> viam.proto.api.common.ResourceName
      :classmethod:

      Get the ResourceName for this component type with the given name

      :param name: The name of the Component
      :type name: str


   .. py:method:: from_robot(cls, robot: viam.robot.client.RobotClient, name: str) -> typing_extensions.Self
      :classmethod:

      Get the component named `name` from the provided robot.

      :param robot: The robot
      :type robot: RobotClient
      :param name: The name of the component
      :type name: str

      :returns: The component, if it exists on the robot
      :rtype: Self


   .. py:method:: do(self, command: Dict[str, Any]) -> Dict[str, Any]
      :abstractmethod:
      :async:

      Send/Receive arbitrary commands

      :param command: The command to execute
      :type command: Dict[str, Any]

      :raises NotImplementedError: Raised if the component does not support arbitrary commands

      :returns: Result of the executed command
      :rtype: Dict[str, Any]



