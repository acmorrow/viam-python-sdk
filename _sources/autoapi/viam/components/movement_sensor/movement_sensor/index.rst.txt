:py:mod:`viam.components.movement_sensor.movement_sensor`
=========================================================

.. py:module:: viam.components.movement_sensor.movement_sensor


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.movement_sensor.movement_sensor.MovementSensor




.. py:class:: MovementSensor(name: str)



   MovementSensor reports information about the robot's direction, position and speed.

   This acts as an abstract base class for any sensors that can provide data regarding the robot's direction, position, and speed.
   This cannot be used on its own. If the `__init__()` function is overriden, it must call the `super().__init__()` function.

   .. py:attribute:: Properties
      

      

   .. py:method:: get_position() -> Tuple[viam.proto.api.common.GeoPoint, float]
      :abstractmethod:
      :async:

      Get the current GeoPoint (latitude, longitude) and altitude (mm)

      :returns: The current lat/long, along with the altitude in mm
      :rtype: Tuple[GeoPoint, float]


   .. py:method:: get_linear_velocity() -> viam.proto.api.common.Vector3
      :abstractmethod:
      :async:

      Get the current linear velocity as a `Vector3` with x, y, and z axes represented in mm/sec

      :returns: The linear velocity in mm/sec
      :rtype: Vector3


   .. py:method:: get_angular_velocity() -> viam.proto.api.common.Vector3
      :abstractmethod:
      :async:

      Get the current angular velocity as a `Vector3` with x, y, and z axes represented in radians/sec

      :returns: The angular velocity in rad/sec
      :rtype: Vector3


   .. py:method:: get_compass_heading() -> float
      :abstractmethod:
      :async:

      Get the current compass heading in degrees

      :returns: The compass heading in degrees
      :rtype: float


   .. py:method:: get_orientation() -> viam.proto.api.common.Orientation
      :abstractmethod:
      :async:

      Get the current orientation

      :returns: The orientation
      :rtype: Orientation


   .. py:method:: get_properties() -> Properties
      :abstractmethod:
      :async:

      Get the supported properties of this sensor

      :returns: The properties
      :rtype: Properties


   .. py:method:: get_accuracy() -> Mapping[str, float]
      :abstractmethod:
      :async:

      Get the accuracy of the various sensors

      :returns: The accuracy in mm
      :rtype: Dict[str, float]


   .. py:method:: get_readings() -> List[Any]
      :async:

      Obtain the measurements/data specific to this sensor.

      :returns:

                The readings for the MovementSensor. The order is:
                    GeoPoint,
                    Altitude,
                    Linear velocity,
                    Angular velocity,
                    Compass heading,
                    Orientation
      :rtype: List[Any]



