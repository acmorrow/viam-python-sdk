:py:mod:`viam.components.types`
===============================

.. py:module:: viam.components.types


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.types.RawImage
   viam.components.types.CameraMimeType




.. py:class:: RawImage



   A raw bytes representation of an image. When requesting `CameraMimeType.RAW`, the returned type will be this RawImage type.

   .. py:attribute:: data
      :annotation: :bytes

      The raw data of the image

   .. py:attribute:: mime_type
      :annotation: :str

      The mimetype of the image

   .. py:attribute:: width
      :annotation: :int

      The width of the image

   .. py:attribute:: height
      :annotation: :int

      The height of the image

   .. py:method:: close()

      Close the image and release resources. For RawImage, this is a noop.



.. py:class:: CameraMimeType



   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: RAW
      :annotation: = image/vnd.viam.rgba

      

   .. py:attribute:: JPEG
      :annotation: = image/jpeg

      

   .. py:attribute:: PNG
      :annotation: = image/png

      

   .. py:attribute:: PCD
      :annotation: = pointcloud/pcd

      

   .. py:method:: encode_image(image: Union[PIL.Image.Image, RawImage]) -> bytes


   .. py:method:: is_supported(mime_type: str) -> bool
      :classmethod:

      Check if the provided mime_type is supported

      :param mime_type: The mime_type to check
      :type mime_type: str

      :returns: Whether the mime_type is supported
      :rtype: bool



