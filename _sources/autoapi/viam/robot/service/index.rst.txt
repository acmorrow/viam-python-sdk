:py:mod:`viam.robot.service`
============================

.. py:module:: viam.robot.service


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.robot.service.RobotService




.. py:class:: RobotService(manager: viam.components.resource_manager.ResourceManager)



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: ResourceNames(self, stream: grpclib.server.Stream[viam.proto.api.robot.ResourceNamesRequest, viam.proto.api.robot.ResourceNamesResponse]) -> None
      :async:


   .. py:method:: GetStatus(self, stream: grpclib.server.Stream[viam.proto.api.robot.GetStatusRequest, viam.proto.api.robot.GetStatusResponse]) -> None
      :async:


   .. py:method:: StreamStatus(self, stream: grpclib.server.Stream[viam.proto.api.robot.StreamStatusRequest, viam.proto.api.robot.StreamStatusResponse]) -> None
      :async:


   .. py:method:: GetOperations(self, stream: grpclib.server.Stream[viam.proto.api.robot.GetOperationsRequest, viam.proto.api.robot.GetOperationsResponse]) -> None
      :async:


   .. py:method:: CancelOperation(self, stream: grpclib.server.Stream[viam.proto.api.robot.CancelOperationRequest, viam.proto.api.robot.CancelOperationResponse]) -> None
      :async:


   .. py:method:: BlockForOperation(self, stream: grpclib.server.Stream[viam.proto.api.robot.BlockForOperationRequest, viam.proto.api.robot.BlockForOperationResponse]) -> None
      :async:


   .. py:method:: FrameSystemConfig(self, stream: grpclib.server.Stream[viam.proto.api.robot.FrameSystemConfigRequest, viam.proto.api.robot.FrameSystemConfigResponse]) -> None
      :async:


   .. py:method:: TransformPose(self, stream: grpclib.server.Stream[viam.proto.api.robot.TransformPoseRequest, viam.proto.api.robot.TransformPoseResponse]) -> None
      :async:


   .. py:method:: DiscoverComponents(self, stream: grpclib.server.Stream[viam.proto.api.robot.DiscoverComponentsRequest, viam.proto.api.robot.DiscoverComponentsResponse]) -> None
      :async:



